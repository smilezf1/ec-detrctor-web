{"version":3,"sources":["webpack:///src/components/configuration/detectorStrategy/list.vue","webpack:///./src/components/configuration/detectorStrategy/list.vue?c5f6","webpack:///./src/components/configuration/detectorStrategy/list.vue"],"names":["detectorStrategy_list","name","components","pagination","mixins","pageMixins","inject","data","listItem","curPage","limit","loading","addTaskDrawer","detectorStrategyDetailDrawer","detectorStrategyDetailList","detectorAndroidItemOptions","detectorIosItemOptions","ruleForm","strategyName","userName","detectorStrategyForm","strategyIsDynamic","strategyIsShelling","strategyType","rules","required","message","trigger","detectorAndroidItemList","detectorIosItemList","defaultdetectorAndroidItemList","defaultdetectorIosItemList","detectorTypeList","detectorAndroidTypeDetailList","detectorIosTypeDetailList","detectorTypeDetailList","detectorStrategyDetailItem","isIndeterminate","activeNames","terminalType","allChecked","selectedOptions","beforeMount","this","getData","methods","handleRadioChange","value","getDetectorList","_this2","asyncToGenerator_default","regenerator_default","a","mark","_callee","params","wrap","_context","prev","next","queryInfo","getDataItem","addPageInfo","stop","_this3","api","detrctorTaskService","findStrategyPage","then","res","code","count","number","pn","size","items","onGotPageData","totalElements","search","_this4","setTimeout","refresh","reload","getDefaultOption","array","_this5","forEach","v","push","key","from_default","set_default","getAllOptions","list","_this6","i","length","children","getAllList","detailArray","_this7","map","isSubCheckedAll","isSubIndeterminate","some","item","subItem","subIndex","id","checkedCount","_this8","getDetectionItemList","detectorStrategyService","getDetectionItemTypeList","promise_default","all","addTask","handleCheckAllChange","val","_this9","subHandleCheckAllChange","index","getSelectedOptions","AndroidHandleCheckChange","allOptionsLength","countArray","iosHandleCheckChange","checked","_this10","splice","regex","RegExp","test","mergeArray","combinedArray","concat","removeWhipptree","processedArray","split","saveTask","_this11","_this","allValid","taskList","$refs","validate","valid","$message","error","detectionItemList","strategyItemDto","saveOrUpdateStrategy","$notify","type","duration","cancelTask","detail","_this12","getDetectorTitleList","getDetectorDetailList","detectorAndroidService","getStrategyDetail","cancelDetectorStrategyDetail","mounted","configuration_detectorStrategy_list","render","_vm","_h","$createElement","_c","_self","staticClass","_m","_v","ref","attrs","model","placeholder","callback","$$v","$set","expression","on","click","$event","title","visible","with-header","wrapperClosable","close-on-press-esape","destroy-on-close","update:visible","prop","slot","staticStyle","width","popper-append-to-body","label","_e","change","indeterminate","_l","directives","rawName","_s","margin-left","disabled","margin-bottom","display","plain","element-loading-text","scopedSlots","_u","fn","scope","$index","row","strategy_type","strategy_is_dynamic","strategy_is_shelling","effect","content","placement","strategy_id","pageChanged","onPageChanged","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/14.2a5b76881f8fa2b074d9.js","sourcesContent":["<template>\r\n  <div class=\"detectorStrategy\">\r\n    <div class=\"detectorStrategyHeader\">\r\n      <p>当前位置:检测策略配置</p>\r\n    </div>\r\n    <div class=\"searchForm\">\r\n      <div class=\"searchBox\">\r\n        <el-form :model=\"ruleForm\" ref=\"ruleForm\">\r\n          <el-input\r\n            size=\"small\"\r\n            placeholder=\"请输入策略名称\"\r\n            v-model=\"ruleForm.strategyName\"\r\n          ></el-input>\r\n          <el-input\r\n            size=\"small\"\r\n            placeholder=\"请输入创建者\"\r\n            v-model=\"ruleForm.userName\"\r\n          ></el-input>\r\n        </el-form>\r\n      </div>\r\n      <div class=\"operateBox\">\r\n        <el-button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          @click=\"search(ruleForm)\"\r\n          class=\"searchButton\"\r\n          >查询</el-button\r\n        >\r\n        <el-button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          @click=\"addTask()\"\r\n          class=\"addTaskButton\"\r\n          >新增检测策略</el-button\r\n        >\r\n        <!-- 新增检测策略 -->\r\n        <el-drawer\r\n          title=\"新增检测策略\"\r\n          :visible.sync=\"addTaskDrawer\"\r\n          :with-header=\"false\"\r\n          :wrapperClosable=\"false\"\r\n          :close-on-press-esape=\"false\"\r\n          :destroy-on-close=\"true\"\r\n          size=\"40%\"\r\n          class=\"addTaskDrawer\"\r\n        >\r\n          <div class=\"el-drawer-header\">\r\n            <h3>新增检测策略</h3>\r\n          </div>\r\n          <div class=\"el-drawer-content\">\r\n            <el-form\r\n              :model=\"detectorStrategyForm\"\r\n              :rules=\"rules\"\r\n              ref=\"detectorStrategyForm\"\r\n            >\r\n              <el-form-item prop=\"strategyName\">\r\n                <label slot=\"label\">检测策略名称:</label>\r\n                <el-input\r\n                  style=\"width:70%\"\r\n                  size=\"small\"\r\n                  v-model=\"detectorStrategyForm.strategyName\"\r\n                ></el-input>\r\n              </el-form-item>\r\n              <el-form-item prop=\"strategyIsDynamic\" v-if=\"terminalType == 1\">\r\n                <label slot=\"label\">是否动态检测:</label>\r\n                <el-select\r\n                  placeholder=\"是否动态检测\"\r\n                  size=\"small\"\r\n                  style=\"width:70%\"\r\n                  v-model=\"detectorStrategyForm.strategyIsDynamic\"\r\n                  :popper-append-to-body=\"false\"\r\n                >\r\n                  <el-option :value=\"1\" key=\"1\" label=\"是\">是</el-option>\r\n                  <el-option :value=\"0\" key=\"0\" label=\"否\">否</el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n\r\n              <el-form-item prop=\"strategyIsShelling\" v-if=\"terminalType == 1\">\r\n                <label slot=\"label\"\r\n                  >是&nbsp;&nbsp;否&nbsp;&nbsp;脱&nbsp;&nbsp;壳:</label\r\n                >\r\n                <el-select\r\n                  placeholder=\"是否脱壳\"\r\n                  size=\"small\"\r\n                  style=\"width:70%\"\r\n                  v-model=\"detectorStrategyForm.strategyIsShelling\"\r\n                  :popper-append-to-body=\"false\"\r\n                >\r\n                  <el-option :value=\"1\" key=\"1\" label=\"是\">是</el-option>\r\n                  <el-option :value=\"0\" key=\"0\" label=\"否\">否</el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n\r\n              <el-form-item>\r\n                <label slot=\"label\"\r\n                  >&nbsp;&nbsp;适&nbsp;&nbsp;用&nbsp;&nbsp;系&nbsp;&nbsp;统:</label\r\n                >\r\n                <el-radio-group\r\n                  v-model=\"detectorStrategyForm.strategyType\"\r\n                  @change=\"handleRadioChange\"\r\n                >\r\n                  <el-radio :label=\"1\">Android</el-radio>\r\n                  <el-radio :label=\"2\">iOS</el-radio>\r\n                </el-radio-group>\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <!-- <label slot=\"label\"\r\n                  >检测项目({{\r\n                    terminalType == 1\r\n                      ? xx.length + defaultdetectorAndroidItemList.length\r\n                      : xx.length + defaultdetectorIosItemList.length\r\n                  }}/{{ detectorTypeDetailList.length }}项)</label\r\n                > -->\r\n                <label slot=\"label\"\r\n                  >&nbsp;&nbsp;检&nbsp;&nbsp;测&nbsp;&nbsp;项&nbsp;&nbsp;目:</label\r\n                >\r\n                <el-checkbox\r\n                  :indeterminate=\"isIndeterminate\"\r\n                  v-model=\"selectedOptions\"\r\n                  @change=\"handleCheckAllChange\"\r\n                  >全选</el-checkbox\r\n                >\r\n              </el-form-item>\r\n              <el-collapse v-model=\"activeNames\">\r\n                <el-collapse-item\r\n                  v-for=\"(item, index) in detectorTypeList\"\r\n                  :key=\"item.id\"\r\n                  :name=\"index\"\r\n                  v-show=\"item.children.length\"\r\n                >\r\n                  <label slot=\"title\">\r\n                    <span> {{ item.name }}</span>\r\n                    <el-checkbox\r\n                      :indeterminate=\"item.isSubIndeterminate\"\r\n                      v-model=\"item.isSubCheckedAll\"\r\n                      @change=\"\r\n                        checked => subHandleCheckAllChange(checked, index)\r\n                      \"\r\n                      style=\"margin-left:20px;\"\r\n                      :disabled=\"\r\n                        item.code == 'titleCode17' ||\r\n                          item.code == 'titleCode001'\r\n                      \"\r\n                      >全选</el-checkbox\r\n                    >\r\n                  </label>\r\n                  <template v-if=\"terminalType == 1\">\r\n                    <el-checkbox-group\r\n                      v-model=\"item.selectedOptions\"\r\n                      @change=\"item => AndroidHandleCheckChange(item, index)\"\r\n                    >\r\n                      <el-checkbox\r\n                        v-for=\"subItem in item.children\"\r\n                        :key=\"subItem.id\"\r\n                        :label=\"subItem.key\"\r\n                        :disabled=\"\r\n                          subItem.code == 'titleCode17' ||\r\n                            subItem.code == 'titleCode001'\r\n                        \"\r\n                        style=\"width:45%;margin-bottom:15px;\"\r\n                        >{{ subItem.name }}</el-checkbox\r\n                      >\r\n                    </el-checkbox-group>\r\n                  </template>\r\n                  <template v-if=\"terminalType == 2\">\r\n                    <el-checkbox-group\r\n                      v-model=\"item.selectedOptions\"\r\n                      @change=\"item => iosHandleCheckChange(item, index)\"\r\n                    >\r\n                      <el-checkbox\r\n                        v-for=\"subItem in item.children\"\r\n                        :key=\"subItem.id\"\r\n                        :label=\"subItem.key\"\r\n                        :disabled=\"\r\n                          subItem.code == 'titleCode17' ||\r\n                            subItem.code == 'titleCode001'\r\n                        \"\r\n                        style=\"width:45%;margin-bottom:15px;\"\r\n                        >{{ subItem.name }}\r\n                      </el-checkbox>\r\n                    </el-checkbox-group>\r\n                  </template>\r\n                </el-collapse-item>\r\n              </el-collapse>\r\n            </el-form>\r\n          </div>\r\n          <div class=\"el-drawer-footer\">\r\n            <div class=\"buttonBox\" style=\"display:inline-block\">\r\n              <el-button type=\"primary\" @click=\"saveTask()\">保存</el-button>\r\n              <el-button @click=\"cancelTask()\" plain>取消</el-button>\r\n            </div>\r\n          </div>\r\n        </el-drawer>\r\n        <el-button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          @click=\"refresh()\"\r\n          style=\"margin-left:10px\"\r\n          class=\"refreshButton\"\r\n          >刷新</el-button\r\n        >\r\n      </div>\r\n    </div>\r\n    <div class=\"detectorStrategyBody\">\r\n      <template>\r\n        <el-table\r\n          ref=\"listItem\"\r\n          :data=\"listItem\"\r\n          v-loading=\"loading\"\r\n          element-loading-text=\"加载中\"\r\n        >\r\n          <el-table-column type=\"index\" label=\"序号\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <span>{{ (curPage - 1) * limit + scope.$index + 1 }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <!--  <el-table-column\r\n            v-show=\"true\"\r\n            prop=\"strategy_id\"\r\n            width=\"100\"\r\n            label=\"ID\"\r\n          ></el-table-column> -->\r\n          <el-table-column\r\n            prop=\"strategy_name\"\r\n            label=\"策略名称\"\r\n            width=\"250\"\r\n          ></el-table-column>\r\n          <el-table-column prop=\"strategy_type\" label=\"适用系统\" width=\"200\">\r\n            <template slot-scope=\"scope\">\r\n              <span v-if=\"scope.row.strategy_type == '1'\">Android</span>\r\n              <span v-if=\"scope.row.strategy_type == '2'\">iOS</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"strategy_count\"\r\n            label=\"检测项数量\"\r\n            width=\"180\"\r\n          ></el-table-column>\r\n          <el-table-column\r\n            prop=\"strategy_is_dynamic\"\r\n            label=\"是否动态检测\"\r\n            width=\"180\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <span v-if=\"scope.row.strategy_is_dynamic == '1'\">是</span>\r\n              <span v-if=\"scope.row.strategy_is_dynamic == '0'\">否</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"strategy_is_shelling\"\r\n            label=\"是否脱壳\"\r\n            width=\"140\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <span v-if=\"scope.row.strategy_is_shelling == '1'\">是</span>\r\n              <span v-if=\"scope.row.strategy_is_shelling == '0'\">否</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"user_name\"\r\n            label=\"创建者\"\r\n            width=\"150\"\r\n          ></el-table-column>\r\n          <el-table-column\r\n            prop=\"create_time\"\r\n            label=\"创建时间\"\r\n            width=\"180\"\r\n          ></el-table-column>\r\n          <el-table-column label=\"操作\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tooltip effect=\"dark\" content=\"详情\" placement=\"top-start\">\r\n                <i\r\n                  class=\"el-icon-tickets detailIcon\"\r\n                  @click=\"\r\n                    detail(scope.row.strategy_id, scope.row.strategy_type)\r\n                  \"\r\n                ></i>\r\n              </el-tooltip>\r\n              <!-- 检测策略详情 -->\r\n              <el-drawer\r\n                title=\"检测策略详情\"\r\n                :visible.sync=\"detectorStrategyDetailDrawer\"\r\n                :with-header=\"false\"\r\n                :wrapperClosable=\"false\"\r\n                :close-on-press-esape=\"false\"\r\n                :destroy-on-close=\"true\"\r\n                size=\"40%\"\r\n              >\r\n                <div class=\"el-drawer-header\">\r\n                  <h3>检测策略详情</h3>\r\n                </div>\r\n                <div class=\"el-drawer-content\">\r\n                  <template v-if=\"detectorStrategyDetailItem\">\r\n                    <el-form :model=\"detectorStrategyDetailItem\">\r\n                      <el-form-item\r\n                        >检测策略名称:&nbsp;&nbsp;{{\r\n                          detectorStrategyDetailItem.strategyName\r\n                        }}</el-form-item\r\n                      >\r\n                      <el-form-item\r\n                        >适用系统:&nbsp;&nbsp;\r\n                        <el-radio-group\r\n                          v-model=\"detectorStrategyDetailItem.strategyType\"\r\n                        >\r\n                          <el-radio :label=\"1\" disabled>Android</el-radio>\r\n                          <el-radio :label=\"2\" disabled>iOS</el-radio>\r\n                        </el-radio-group>\r\n                      </el-form-item>\r\n                      <el-form-item\r\n                        >检测项目{{\r\n                          detectorStrategyDetailItem.detectionItemList.length\r\n                        }}项</el-form-item\r\n                      >\r\n                      <el-collapse v-model=\"activeNames\">\r\n                        <el-collapse-item\r\n                          v-for=\"(item,\r\n                          index) in detectorStrategyDetailItem.children\"\r\n                          :name=\"index\"\r\n                          :key=\"item.id\"\r\n                          v-show=\"item.children.length\"\r\n                        >\r\n                          <label slot=\"title\">{{ item.name }}</label>\r\n                          <el-checkbox\r\n                            v-for=\"subItem in item.children\"\r\n                            :key=\"subItem.id\"\r\n                            style=\"width:45%;margin-bottom:15px\"\r\n                            :disabled=\"true\"\r\n                            :checked=\"true\"\r\n                            >{{ subItem.name }}</el-checkbox\r\n                          >\r\n                        </el-collapse-item>\r\n                      </el-collapse>\r\n                    </el-form>\r\n                  </template>\r\n                </div>\r\n                <div class=\"el-drawer-footer\">\r\n                  <div class=\"buttonBox\" style=\"display:inline-block\">\r\n                    <el-button @click=\"cancelDetectorStrategyDetail()\" plain\r\n                      >取消</el-button\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </el-drawer>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </template>\r\n    </div>\r\n    <div class=\"detectorStrategyBase\">\r\n      <pagination @pageChanged=\"onPageChanged\"></pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport api from \"../../request/api\";\r\nimport pagination from \"../../common/pagination\";\r\nimport pageMixins from \"../../../utils/pageMixins\";\r\nexport default {\r\n  name: \"detectorStrategy\",\r\n  components: { pagination },\r\n  mixins: [pageMixins],\r\n  inject: [\"reload\"],\r\n  data() {\r\n    return {\r\n      listItem: [],\r\n      curPage: 1,\r\n      limit: 10,\r\n      loading: false,\r\n      addTaskDrawer: false,\r\n      detectorStrategyDetailDrawer: false,\r\n      detectorStrategyDetailList: null,\r\n      detectorAndroidItemOptions: [],\r\n      detectorIosItemOptions: [],\r\n      ruleForm: {\r\n        strategyName: \"\",\r\n        userName: \"\"\r\n      },\r\n      detectorStrategyForm: {\r\n        strategyName: \"\",\r\n        strategyIsDynamic: \"\",\r\n        strategyIsShelling: \"\",\r\n        strategyType: 1\r\n      },\r\n      rules: {\r\n        strategyName: {\r\n          required: true,\r\n          message: \"请输入检测策略名称\",\r\n          trigger: \"blur\"\r\n        },\r\n        strategyIsDynamic: {\r\n          required: true,\r\n          message: \"请选择是否动态检测\",\r\n          trigger: \"blur\"\r\n        },\r\n        strategyIsShelling: {\r\n          required: true,\r\n          message: \"请选择是否脱壳\",\r\n          trigger: \"blur\"\r\n        }\r\n      },\r\n      detectorAndroidItemList: [],\r\n      detectorIosItemList: [],\r\n      defaultdetectorAndroidItemList: [],\r\n      defaultdetectorIosItemList: [],\r\n      detectorTypeList: [],\r\n      detectorAndroidTypeDetailList: [],\r\n      detectorIosTypeDetailList: [],\r\n      detectorTypeDetailList: [],\r\n      detectorStrategyDetailItem: null,\r\n      isIndeterminate: true,\r\n      activeNames: [],\r\n      terminalType: 1,\r\n      allChecked: false,\r\n      selectedOptions: []\r\n    };\r\n  },\r\n  beforeMount() {\r\n    this.getData();\r\n  },\r\n  methods: {\r\n    handleRadioChange(value) {\r\n      this.terminalType = value;\r\n      this.getDetectorList(value);\r\n    },\r\n    async getData() {\r\n      const params = {};\r\n      params.queryInfo = this.ruleForm;\r\n      params.queryInfo.terminalType = this.terminalType;\r\n      this.getDataItem(this.addPageInfo(params));\r\n    },\r\n    getDataItem(params) {\r\n      api.detrctorTaskService.findStrategyPage(params).then(res => {\r\n        if (res.code == \"00\") {\r\n          const count = res.data.count,\r\n            { pn: number, limit: size, queryInfo } = params;\r\n          this.listItem = res.data.items;\r\n          this.curPage = number;\r\n          this.limit = size;\r\n          this.onGotPageData({ totalElements: count, size, number, queryInfo });\r\n        }\r\n      });\r\n    },\r\n    search(ruleForm) {\r\n      this.loading = true;\r\n      const params = {};\r\n      params.queryInfo = ruleForm;\r\n      this.addPageInfo(params);\r\n      this.getDataItem(params);\r\n      setTimeout(() => {\r\n        this.loading = false;\r\n      }, 500);\r\n    },\r\n    refresh() {\r\n      this.reload();\r\n    },\r\n    //得到Androis,ios默认选项\r\n    getDefaultOption(array, terminalType) {\r\n      if (terminalType == 1) {\r\n        array.forEach(v => {\r\n          this.detectorAndroidItemList.push(v.key);\r\n          this.detectorAndroidItemList = Array.from(\r\n            new Set(this.detectorAndroidItemList)\r\n          );\r\n        });\r\n        this.defaultdetectorAndroidItemList = this.detectorAndroidItemList;\r\n        return this.defaultdetectorAndroidItemList;\r\n      } else {\r\n        array.forEach(v => {\r\n          this.detectorIosItemList.push(v.key);\r\n          this.detectorIosItemList = Array.from(\r\n            new Set(this.detectorIosItemList)\r\n          );\r\n        });\r\n        this.defaultdetectorIosItemList = this.detectorIosItemList;\r\n        return this.defaultdetectorIosItemList;\r\n      }\r\n    },\r\n    //得到Android,Ios的全部选项\r\n    getAllOptions(list, terminalType) {\r\n      for (let i = 0; i < list.length; i++) {\r\n        if (list[i].children.length != 0) {\r\n          list[i].children.forEach(v => {\r\n            if (terminalType == 1) {\r\n              this.detectorAndroidItemOptions.push(v.key);\r\n              this.detectorAndroidItemOptions = Array.from(\r\n                new Set(this.detectorAndroidItemOptions)\r\n              );\r\n            } else {\r\n              this.detectorIosItemOptions.push(v.key);\r\n              this.detectorIosItemOptions = Array.from(\r\n                new Set(this.detectorIosItemOptions)\r\n              );\r\n            }\r\n          });\r\n        }\r\n        this.activeNames.push(i);\r\n      }\r\n    },\r\n    //得到Android,Ios数组的数据\r\n    getAllList(array, detailArray, terminalType) {\r\n      if (array) {\r\n        array.map((v, i) => {\r\n          v.selectedOptions = [];\r\n          v.children = [];\r\n          v.isSubCheckedAll = false;\r\n          v.isSubIndeterminate = false;\r\n          detailArray.some(item => {\r\n            if (item.code == v.code) {\r\n              v.children.push(item);\r\n              v.children.forEach((subItem, subIndex) => {\r\n                subItem.key = i + \"-\" + subItem.id;\r\n                subItem.checkedCount = false;\r\n              });\r\n            }\r\n          });\r\n\r\n          if (v.code == \"titleCode17\" || v.code == \"titleCode001\") {\r\n            v.isSubCheckedAll = true;\r\n            this.getDefaultOption(v.children, terminalType);\r\n          }\r\n          if (v.code == \"titleCode17\") {\r\n            v.selectedOptions = this.detectorAndroidItemList;\r\n          }\r\n          if (v.code == \"titleCode001\") {\r\n            v.selectedOptions = this.detectorIosItemList;\r\n          }\r\n        });\r\n      }\r\n      return array;\r\n    },\r\n    getDetectorList(terminalType) {\r\n      const getDetectionItemList = api.detectorStrategyService\r\n        .getDetectionItemList(terminalType)\r\n        .then(res => {\r\n          if (res.code == \"00\") {\r\n            return res.data;\r\n          }\r\n        });\r\n      const getDetectionItemTypeList = api.detectorStrategyService\r\n        .getDetectionItemTypeList(terminalType)\r\n        .then(res => {\r\n          if (res.code == \"00\") {\r\n            return res.data;\r\n          }\r\n        });\r\n      Promise.all([getDetectionItemList, getDetectionItemTypeList]).then(\r\n        item => {\r\n          this.detectorTypeList = item[1];\r\n          this.detectorTypeDetailList = item[0];\r\n          this.getAllList(\r\n            this.detectorTypeList,\r\n            this.detectorTypeDetailList,\r\n            terminalType\r\n          );\r\n          this.getAllOptions(this.detectorTypeList, terminalType);\r\n        }\r\n      );\r\n    },\r\n    /* 新增检测策略 */\r\n    addTask() {\r\n      this.addTaskDrawer = true;\r\n      this.getDetectorList(this.terminalType);\r\n    },\r\n    //检测项目全选\r\n    handleCheckAllChange(val) {\r\n      const terminalType = this.terminalType;\r\n      this.allChecked = val;\r\n      this.isIndeterminate = false;\r\n      this.detectorTypeList.forEach(v => {\r\n        v.isSubCheckedAll = val;\r\n        if (v.code == \"titleCode17\" || v.code == \"titleCode001\") {\r\n          v.isSubCheckedAll = true;\r\n        }\r\n        if (terminalType == 1) {\r\n          v.selectedOptions = val\r\n            ? this.detectorAndroidItemOptions\r\n            : this.defaultdetectorAndroidItemList;\r\n        } else {\r\n          v.selectedOptions = val\r\n            ? this.detectorIosItemOptions\r\n            : this.defaultdetectorIosItemList;\r\n        }\r\n      });\r\n    },\r\n    //全选 子项目subHandleCheckAllChange\r\n    subHandleCheckAllChange(val, index) {\r\n      const terminalType = this.terminalType,\r\n        selectedOptions = this.getSelectedOptions(\r\n          this.detectorTypeList[index].children,\r\n          val,\r\n          index\r\n        );\r\n      if (terminalType == 1) {\r\n        this.detectorTypeList[index].selectedOptions = val\r\n          ? selectedOptions\r\n          : this.defaultdetectorAndroidItemList;\r\n      } else {\r\n        this.detectorTypeList[index].selectedOptions = val\r\n          ? selectedOptions\r\n          : this.defaultdetectorIosItemList;\r\n      }\r\n      this.isIndeterminate = true;\r\n    },\r\n    //单独选\r\n    //Android\r\n    AndroidHandleCheckChange(val, index) {\r\n      const selectedOptions = this.getSelectedOptions(\r\n          this.detectorTypeList[index].children,\r\n          val,\r\n          index\r\n        ),\r\n        checkedCount = this.detectorTypeList[index].selectedOptions.length,\r\n        allOptionsLength = this.countArray(\r\n          this.detectorAndroidItemOptions,\r\n          index\r\n        );\r\n      this.detectorTypeList[index].isSubCheckedAll =\r\n        checkedCount == allOptionsLength;\r\n      this.detectorTypeList[index].isSubIndeterminate =\r\n        checkedCount > 0 && checkedCount < allOptionsLength;\r\n    },\r\n    //ios\r\n    iosHandleCheckChange(val, index) {\r\n      const selectedOptions = this.getSelectedOptions(\r\n          this.detectorTypeList[index].children,\r\n          val,\r\n          index\r\n        ),\r\n        checkedCount = this.detectorTypeList[index].selectedOptions.length,\r\n        allOptionsLength = this.countArray(this.detectorIosItemOptions, index);\r\n      this.detectorTypeList[index].isSubCheckedAll =\r\n        checkedCount == allOptionsLength;\r\n      this.detectorTypeList[index].isSubIndeterminate =\r\n        checkedCount > 0 && checkedCount < allOptionsLength;\r\n    },\r\n    getSelectedOptions(array, checked, index) {\r\n      const terminalType = this.terminalType;\r\n      this.selectedOptions = [];\r\n      array.forEach((v, i) => {\r\n        if (checked) {\r\n          this.selectedOptions.push(v.key);\r\n        } else {\r\n          this.selectedOptions = this.selectedOptions.splice(0, v.key);\r\n        }\r\n      });\r\n      return this.selectedOptions;\r\n    },\r\n    //统计数量 测试\r\n    countArray(array, index) {\r\n      if (array) {\r\n        let count = 0,\r\n          regex = new RegExp(`^${index}-*`);\r\n        array.forEach(v => {\r\n          if (regex.test(v)) {\r\n            count++;\r\n          }\r\n        });\r\n        return count;\r\n      }\r\n    },\r\n    //求数组中长度最大的值\r\n    /* findMax(array) {\r\n      let max = array[0].selectedOptions;\r\n      for (let i = 1; i < array.length; i++) {\r\n        if (array[i].selectedOptions.length > max.length) {\r\n          max = array[i].selectedOptions;\r\n        }\r\n      }\r\n      return this.removeWhipptree(max);\r\n    }, */\r\n    //将数组中选中的值进行合并\r\n    mergeArray(array) {\r\n      let combinedArray = [];\r\n      for (let i = 0; i < array.length; i++) {\r\n        combinedArray = combinedArray.concat(array[i].selectedOptions);\r\n      }\r\n      return combinedArray;\r\n    },\r\n    //将数组中数字-去掉\r\n    removeWhipptree(array) {\r\n      let processedArray = [];\r\n      array.forEach(v => {\r\n        if (v) {\r\n          processedArray.push(v.split(\"-\")[1]);\r\n        }\r\n      });\r\n      return processedArray;\r\n    },\r\n    //保存新增的检测策略\r\n    saveTask() {\r\n      const _this = this;\r\n      let allValid = true,\r\n        taskList = this.detectorStrategyForm;\r\n      _this.$refs[\"detectorStrategyForm\"].validate((valid, message) => {\r\n        if (!valid) {\r\n          if (message.strategyIsShelling) {\r\n            _this.$message.error(\"请选择是否脱壳!\");\r\n          }\r\n          if (message.strategyIsDynamic) {\r\n            _this.$message.error(\"请选择是否动态检测!\");\r\n          }\r\n          if (message.strategyName) {\r\n            _this.$message.error(\"请输入检测策略名称！\");\r\n          }\r\n          allValid = false;\r\n        }\r\n        if (this.terminalType == 1) {\r\n          //选中的项+默认项\r\n          this.detectionItemList = this.removeWhipptree(\r\n            this.mergeArray(this.detectorTypeList)\r\n          ).concat(this.removeWhipptree(this.defaultdetectorAndroidItemList));\r\n          this.detectionItemList = Array.from(new Set(this.detectionItemList));\r\n        } else {\r\n          this.detectionItemList = this.removeWhipptree(\r\n            this.mergeArray(this.detectorTypeList)\r\n          ).concat(this.removeWhipptree(this.defaultdetectorIosItemList));\r\n          this.detectionItemList = Array.from(new Set(this.detectionItemList));\r\n        }\r\n        if (allValid) {\r\n          const strategyItemDto = {\r\n            detectionItemList: this.detectionItemList,\r\n            strategyIsDynamic: taskList.strategyIsDynamic,\r\n            strategyIsShelling: taskList.strategyIsShelling,\r\n            strategyName: taskList.strategyName,\r\n            strategyType: taskList.strategyType\r\n          };\r\n          api.detectorStrategyService\r\n            .saveOrUpdateStrategy(strategyItemDto)\r\n            .then(res => {\r\n              if (res.code == \"00\") {\r\n                _this.addTaskDrawer = false;\r\n                _this.$notify({\r\n                  message: \"新增检测策略成功\",\r\n                  type: \"success\",\r\n                  duration: 1000\r\n                });\r\n                _this.reload();\r\n              }\r\n            });\r\n        }\r\n      });\r\n    },\r\n    //取消保存新增的检测策略\r\n    cancelTask() {\r\n      this.addTaskDrawer = false;\r\n    },\r\n    /* 详情 */\r\n    detail(id, type) {\r\n      this.detectorStrategyDetailDrawer = true;\r\n      const getDetectorTitleList = api.detectorStrategyService\r\n          .getDetectionItemTypeList(type)\r\n          .then(res => {\r\n            if (res.code == \"00\") {\r\n              return res.data;\r\n            }\r\n          }),\r\n        getDetectorDetailList = api.detectorAndroidService\r\n          .getStrategyDetail(id)\r\n          .then(res => {\r\n            if (res.code == \"00\") {\r\n              return res.data;\r\n            }\r\n          });\r\n      Promise.all([getDetectorTitleList, getDetectorDetailList]).then(item => {\r\n        this.detectorStrategyDetailItem = item[1];\r\n        this.detectorStrategyDetailItem.children = this.getAllList(\r\n          item[0],\r\n          item[1].detectionItemList,\r\n          this.terminalType\r\n        );\r\n        this.getAllOptions(\r\n          this.detectorStrategyDetailItem.children,\r\n          this.terminalType\r\n        ); //得到activeNames\r\n      });\r\n    },\r\n    //取消查看检测策略详情\r\n    cancelDetectorStrategyDetail() {\r\n      this.detectorStrategyDetailDrawer = false;\r\n    }\r\n  },\r\n  mounted() {}\r\n};\r\n</script>\r\n<style>\r\n.detectorStrategyHeader {\r\n  height: 50px;\r\n  line-height: 50px;\r\n  font-size: 14px;\r\n}\r\n.detailIcon {\r\n  font-size: 22px;\r\n  color: #517fc3;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n}\r\n.detectorStrategy .el-checkbox__input.is-checked .el-checkbox__inner,\r\n.detectorStrategy\r\n  .el-checkbox__input.is-disabled.is-checked\r\n  .el-checkbox__inner,\r\n.detectorStrategy\r\n  .el-checkbox__input.is-disabled.is-indeterminate\r\n  .el-checkbox__inner,\r\n.detectorStrategy .el-radio__input.is-checked .el-radio__inner,\r\n.detectorStrategy .el-checkbox__input.is-indeterminate .el-checkbox__inner {\r\n  background: #517fc3;\r\n  border-color: #517fc3;\r\n}\r\n.el-checkbox__input.is-checked + .el-checkbox__label,\r\n.el-radio__input.is-checked + .el-radio__label,\r\n.el-pager li.active {\r\n  color: #517fc3;\r\n}\r\n.el-radio__input.is-disabled.is-checked .el-radio__inner {\r\n  background-color: #5aa4f0 !important;\r\n}\r\n.el-checkbox__input.is-disabled + span.el-checkbox__label {\r\n  color: #606266;\r\n}\r\n.detectorStrategy .el-collapse-item__header {\r\n  padding-left: 0px;\r\n}\r\n.searchBox .el-input {\r\n  width: auto;\r\n}\r\n.detectorStrategy .searchForm {\r\n  display: flex;\r\n}\r\n.detectorStrategy .operateBox {\r\n  margin-left: 15px;\r\n}\r\n.detectorStrategyBody {\r\n  margin-top: 15px;\r\n}\r\n.detectorStrategyBase {\r\n  margin-top: 15px;\r\n}\r\n.detectorStrategy .el-form-item__label {\r\n  text-align: left;\r\n}\r\n.detectorStrategy .el-select-dropdown {\r\n  position: absolute !important;\r\n  top: 35px !important;\r\n  left: 0 !important;\r\n  height: 205% !important;\r\n  overflow-y: auto !important;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/configuration/detectorStrategy/list.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"detectorStrategy\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"searchForm\"},[_c('div',{staticClass:\"searchBox\"},[_c('el-form',{ref:\"ruleForm\",attrs:{\"model\":_vm.ruleForm}},[_c('el-input',{attrs:{\"size\":\"small\",\"placeholder\":\"请输入策略名称\"},model:{value:(_vm.ruleForm.strategyName),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"strategyName\", $$v)},expression:\"ruleForm.strategyName\"}}),_vm._v(\" \"),_c('el-input',{attrs:{\"size\":\"small\",\"placeholder\":\"请输入创建者\"},model:{value:(_vm.ruleForm.userName),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"userName\", $$v)},expression:\"ruleForm.userName\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"operateBox\"},[_c('el-button',{staticClass:\"searchButton\",attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.search(_vm.ruleForm)}}},[_vm._v(\"查询\")]),_vm._v(\" \"),_c('el-button',{staticClass:\"addTaskButton\",attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.addTask()}}},[_vm._v(\"新增检测策略\")]),_vm._v(\" \"),_c('el-drawer',{staticClass:\"addTaskDrawer\",attrs:{\"title\":\"新增检测策略\",\"visible\":_vm.addTaskDrawer,\"with-header\":false,\"wrapperClosable\":false,\"close-on-press-esape\":false,\"destroy-on-close\":true,\"size\":\"40%\"},on:{\"update:visible\":function($event){_vm.addTaskDrawer=$event}}},[_c('div',{staticClass:\"el-drawer-header\"},[_c('h3',[_vm._v(\"新增检测策略\")])]),_vm._v(\" \"),_c('div',{staticClass:\"el-drawer-content\"},[_c('el-form',{ref:\"detectorStrategyForm\",attrs:{\"model\":_vm.detectorStrategyForm,\"rules\":_vm.rules}},[_c('el-form-item',{attrs:{\"prop\":\"strategyName\"}},[_c('label',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(\"检测策略名称:\")]),_vm._v(\" \"),_c('el-input',{staticStyle:{\"width\":\"70%\"},attrs:{\"size\":\"small\"},model:{value:(_vm.detectorStrategyForm.strategyName),callback:function ($$v) {_vm.$set(_vm.detectorStrategyForm, \"strategyName\", $$v)},expression:\"detectorStrategyForm.strategyName\"}})],1),_vm._v(\" \"),(_vm.terminalType == 1)?_c('el-form-item',{attrs:{\"prop\":\"strategyIsDynamic\"}},[_c('label',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(\"是否动态检测:\")]),_vm._v(\" \"),_c('el-select',{staticStyle:{\"width\":\"70%\"},attrs:{\"placeholder\":\"是否动态检测\",\"size\":\"small\",\"popper-append-to-body\":false},model:{value:(_vm.detectorStrategyForm.strategyIsDynamic),callback:function ($$v) {_vm.$set(_vm.detectorStrategyForm, \"strategyIsDynamic\", $$v)},expression:\"detectorStrategyForm.strategyIsDynamic\"}},[_c('el-option',{key:\"1\",attrs:{\"value\":1,\"label\":\"是\"}},[_vm._v(\"是\")]),_vm._v(\" \"),_c('el-option',{key:\"0\",attrs:{\"value\":0,\"label\":\"否\"}},[_vm._v(\"否\")])],1)],1):_vm._e(),_vm._v(\" \"),(_vm.terminalType == 1)?_c('el-form-item',{attrs:{\"prop\":\"strategyIsShelling\"}},[_c('label',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(\"是  否  脱  壳:\")]),_vm._v(\" \"),_c('el-select',{staticStyle:{\"width\":\"70%\"},attrs:{\"placeholder\":\"是否脱壳\",\"size\":\"small\",\"popper-append-to-body\":false},model:{value:(_vm.detectorStrategyForm.strategyIsShelling),callback:function ($$v) {_vm.$set(_vm.detectorStrategyForm, \"strategyIsShelling\", $$v)},expression:\"detectorStrategyForm.strategyIsShelling\"}},[_c('el-option',{key:\"1\",attrs:{\"value\":1,\"label\":\"是\"}},[_vm._v(\"是\")]),_vm._v(\" \"),_c('el-option',{key:\"0\",attrs:{\"value\":0,\"label\":\"否\"}},[_vm._v(\"否\")])],1)],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',[_c('label',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(\"  适  用  系  统:\")]),_vm._v(\" \"),_c('el-radio-group',{on:{\"change\":_vm.handleRadioChange},model:{value:(_vm.detectorStrategyForm.strategyType),callback:function ($$v) {_vm.$set(_vm.detectorStrategyForm, \"strategyType\", $$v)},expression:\"detectorStrategyForm.strategyType\"}},[_c('el-radio',{attrs:{\"label\":1}},[_vm._v(\"Android\")]),_vm._v(\" \"),_c('el-radio',{attrs:{\"label\":2}},[_vm._v(\"iOS\")])],1)],1),_vm._v(\" \"),_c('el-form-item',[_c('label',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(\"  检  测  项  目:\")]),_vm._v(\" \"),_c('el-checkbox',{attrs:{\"indeterminate\":_vm.isIndeterminate},on:{\"change\":_vm.handleCheckAllChange},model:{value:(_vm.selectedOptions),callback:function ($$v) {_vm.selectedOptions=$$v},expression:\"selectedOptions\"}},[_vm._v(\"全选\")])],1),_vm._v(\" \"),_c('el-collapse',{model:{value:(_vm.activeNames),callback:function ($$v) {_vm.activeNames=$$v},expression:\"activeNames\"}},_vm._l((_vm.detectorTypeList),function(item,index){return _c('el-collapse-item',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.children.length),expression:\"item.children.length\"}],key:item.id,attrs:{\"name\":index}},[_c('label',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\" \"+_vm._s(item.name))]),_vm._v(\" \"),_c('el-checkbox',{staticStyle:{\"margin-left\":\"20px\"},attrs:{\"indeterminate\":item.isSubIndeterminate,\"disabled\":item.code == 'titleCode17' ||\n                        item.code == 'titleCode001'},on:{\"change\":function (checked) { return _vm.subHandleCheckAllChange(checked, index); }},model:{value:(item.isSubCheckedAll),callback:function ($$v) {_vm.$set(item, \"isSubCheckedAll\", $$v)},expression:\"item.isSubCheckedAll\"}},[_vm._v(\"全选\")])],1),_vm._v(\" \"),(_vm.terminalType == 1)?[_c('el-checkbox-group',{on:{\"change\":function (item) { return _vm.AndroidHandleCheckChange(item, index); }},model:{value:(item.selectedOptions),callback:function ($$v) {_vm.$set(item, \"selectedOptions\", $$v)},expression:\"item.selectedOptions\"}},_vm._l((item.children),function(subItem){return _c('el-checkbox',{key:subItem.id,staticStyle:{\"width\":\"45%\",\"margin-bottom\":\"15px\"},attrs:{\"label\":subItem.key,\"disabled\":subItem.code == 'titleCode17' ||\n                          subItem.code == 'titleCode001'}},[_vm._v(_vm._s(subItem.name))])}),1)]:_vm._e(),_vm._v(\" \"),(_vm.terminalType == 2)?[_c('el-checkbox-group',{on:{\"change\":function (item) { return _vm.iosHandleCheckChange(item, index); }},model:{value:(item.selectedOptions),callback:function ($$v) {_vm.$set(item, \"selectedOptions\", $$v)},expression:\"item.selectedOptions\"}},_vm._l((item.children),function(subItem){return _c('el-checkbox',{key:subItem.id,staticStyle:{\"width\":\"45%\",\"margin-bottom\":\"15px\"},attrs:{\"label\":subItem.key,\"disabled\":subItem.code == 'titleCode17' ||\n                          subItem.code == 'titleCode001'}},[_vm._v(_vm._s(subItem.name)+\"\\n                    \")])}),1)]:_vm._e()],2)}),1)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"el-drawer-footer\"},[_c('div',{staticClass:\"buttonBox\",staticStyle:{\"display\":\"inline-block\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.saveTask()}}},[_vm._v(\"保存\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"plain\":\"\"},on:{\"click\":function($event){return _vm.cancelTask()}}},[_vm._v(\"取消\")])],1)])]),_vm._v(\" \"),_c('el-button',{staticClass:\"refreshButton\",staticStyle:{\"margin-left\":\"10px\"},attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.refresh()}}},[_vm._v(\"刷新\")])],1)]),_vm._v(\" \"),_c('div',{staticClass:\"detectorStrategyBody\"},[[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],ref:\"listItem\",attrs:{\"data\":_vm.listItem,\"element-loading-text\":\"加载中\"}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"序号\",\"width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s((_vm.curPage - 1) * _vm.limit + scope.$index + 1))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"strategy_name\",\"label\":\"策略名称\",\"width\":\"250\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"strategy_type\",\"label\":\"适用系统\",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.strategy_type == '1')?_c('span',[_vm._v(\"Android\")]):_vm._e(),_vm._v(\" \"),(scope.row.strategy_type == '2')?_c('span',[_vm._v(\"iOS\")]):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"strategy_count\",\"label\":\"检测项数量\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"strategy_is_dynamic\",\"label\":\"是否动态检测\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.strategy_is_dynamic == '1')?_c('span',[_vm._v(\"是\")]):_vm._e(),_vm._v(\" \"),(scope.row.strategy_is_dynamic == '0')?_c('span',[_vm._v(\"否\")]):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"strategy_is_shelling\",\"label\":\"是否脱壳\",\"width\":\"140\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.strategy_is_shelling == '1')?_c('span',[_vm._v(\"是\")]):_vm._e(),_vm._v(\" \"),(scope.row.strategy_is_shelling == '0')?_c('span',[_vm._v(\"否\")]):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"user_name\",\"label\":\"创建者\",\"width\":\"150\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"create_time\",\"label\":\"创建时间\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":\"详情\",\"placement\":\"top-start\"}},[_c('i',{staticClass:\"el-icon-tickets detailIcon\",on:{\"click\":function($event){return _vm.detail(scope.row.strategy_id, scope.row.strategy_type)}}})]),_vm._v(\" \"),_c('el-drawer',{attrs:{\"title\":\"检测策略详情\",\"visible\":_vm.detectorStrategyDetailDrawer,\"with-header\":false,\"wrapperClosable\":false,\"close-on-press-esape\":false,\"destroy-on-close\":true,\"size\":\"40%\"},on:{\"update:visible\":function($event){_vm.detectorStrategyDetailDrawer=$event}}},[_c('div',{staticClass:\"el-drawer-header\"},[_c('h3',[_vm._v(\"检测策略详情\")])]),_vm._v(\" \"),_c('div',{staticClass:\"el-drawer-content\"},[(_vm.detectorStrategyDetailItem)?[_c('el-form',{attrs:{\"model\":_vm.detectorStrategyDetailItem}},[_c('el-form-item',[_vm._v(\"检测策略名称:  \"+_vm._s(_vm.detectorStrategyDetailItem.strategyName))]),_vm._v(\" \"),_c('el-form-item',[_vm._v(\"适用系统:  \\n                      \"),_c('el-radio-group',{model:{value:(_vm.detectorStrategyDetailItem.strategyType),callback:function ($$v) {_vm.$set(_vm.detectorStrategyDetailItem, \"strategyType\", $$v)},expression:\"detectorStrategyDetailItem.strategyType\"}},[_c('el-radio',{attrs:{\"label\":1,\"disabled\":\"\"}},[_vm._v(\"Android\")]),_vm._v(\" \"),_c('el-radio',{attrs:{\"label\":2,\"disabled\":\"\"}},[_vm._v(\"iOS\")])],1)],1),_vm._v(\" \"),_c('el-form-item',[_vm._v(\"检测项目\"+_vm._s(_vm.detectorStrategyDetailItem.detectionItemList.length)+\"项\")]),_vm._v(\" \"),_c('el-collapse',{model:{value:(_vm.activeNames),callback:function ($$v) {_vm.activeNames=$$v},expression:\"activeNames\"}},_vm._l((_vm.detectorStrategyDetailItem.children),function(item,index){return _c('el-collapse-item',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.children.length),expression:\"item.children.length\"}],key:item.id,attrs:{\"name\":index}},[_c('label',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(item.name))]),_vm._v(\" \"),_vm._l((item.children),function(subItem){return _c('el-checkbox',{key:subItem.id,staticStyle:{\"width\":\"45%\",\"margin-bottom\":\"15px\"},attrs:{\"disabled\":true,\"checked\":true}},[_vm._v(_vm._s(subItem.name))])})],2)}),1)],1)]:_vm._e()],2),_vm._v(\" \"),_c('div',{staticClass:\"el-drawer-footer\"},[_c('div',{staticClass:\"buttonBox\",staticStyle:{\"display\":\"inline-block\"}},[_c('el-button',{attrs:{\"plain\":\"\"},on:{\"click\":function($event){return _vm.cancelDetectorStrategyDetail()}}},[_vm._v(\"取消\")])],1)])])]}}])})],1)]],2),_vm._v(\" \"),_c('div',{staticClass:\"detectorStrategyBase\"},[_c('pagination',{on:{\"pageChanged\":_vm.onPageChanged}})],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"detectorStrategyHeader\"},[_c('p',[_vm._v(\"当前位置:检测策略配置\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-33d65786\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/configuration/detectorStrategy/list.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-33d65786\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./list.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./list.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./list.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-33d65786\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./list.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/configuration/detectorStrategy/list.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}